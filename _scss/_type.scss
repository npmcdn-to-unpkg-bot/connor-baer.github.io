// ==== TYPOGRAPHY ==== //

/* Define all global font styles here. */

/*
 * 1. Variables
 * 2. font()
 * 3. Global styles
 */



// 1. Variables //

$sans: 'freight-sans-pro', 'Freight Sans Pro', 'PT Sans', Arial, sans-serif;
$sans-normal: 500;
$sans-bold: 700;

$serif: 'freight-text-pro', 'Freight Text Pro', 'Times New Roman', Times, serif;
$serif-normal: 400;
$serif-bold: 700;

$code: 'Courier New', Courier, monospace;

$ms-base: 1rem;
$ms-ratio: 1.2;

$typi: (
  null: (18px, 1.3),
  medium: (21px, 1.5),
  x-large: (28px),
);

@mixin link-underline() {
  position: relative;
  z-index: 1;
  display: inline-block;
  cursor: pointer;

  &:after {
    content: '';
    position: absolute;
    width: 100%;
    height: 2px;
    bottom: -2px;
    left: 0;
    z-index: -1;
    transition: $short;
  }
}



// 2. font() //

/* 
 * The font() function accepts a style parameter.
 * It is intended to promote consistency in the typography, 
 * therefore the number of styles should be kept to a minimum.
 * Attributes which change between instances should not be defined here (e.g. color). 
 */
@mixin font($style: null) {

  @if $style == null {
    @warn "Mixin font() received no input! Please provide a style.";
    font-size: ms(10);
    color: red;
  }

  @else if $style == 'title' {
    font-family: $sans;
    font-weight: $sans-bold;
    font-size: ms(5);
    line-height: 1.2;
  }

  @else if $style == 'header1' {
    font-family: $sans;
    font-weight: $sans-bold;
    font-size: ms(4);
    color: palette(gray, darker);
    line-height: 1.2;
    margin-top: vr(.75);
    margin-bottom: vr(.5);
  }

  @else if $style == 'header2' {
    font-family: $sans;
    font-weight: $sans-bold;
    font-size: ms(1);
    color: palette(gray, dark);
    line-height: 1.2;
    margin-top: vr(.5);
    margin-bottom: vr(.25);
  }

  @else if $style == 'header3' {
    font-family: $sans;
    font-size: ms(-1);
    font-weight: $sans-bold;
    text-transform: uppercase;
    letter-spacing: 0.1rem;
  }

  @else if $style == 'body' {
    font-family: $serif;
    font-weight: $serif-normal;
    font-size: ms(0);
    line-height: 1.75;
    margin-top: 0;
    margin-bottom: vr(.5);

    &.-large {
      font-size: ms(1);
    }
    
    a {
      @include link-underline();

      color: palette($primary);
      
      &:after {
        bottom: 2px;
        background-color: transparent;
      }

      &:hover:after {
        background-color: palette($secondary);
      }
    }
  }

  @else if $style == 'app' {
    font-family: $sans;
    font-weight: $sans-normal;
    font-size: ms(0);

    &.-large {
      font-size: ms(1);
    }

    a {
      @include link-underline();

      color: palette($primary);
    }
  }
  
  @else {
    @warn "Mixin font() received invalid input! This style does not exist.";
    font-size: ms(10);
    color: red;
  }
}



// 3. Global styles //

/* Update the foundational and global aspects of the page here. */

html {
  @include typi-base();

  font-family: $sans;
  font-weight: $sans-normal;
  word-wrap: break-word;
  background-color: palette(gray, darker);
  -webkit-box-sizing: border-box;
  -moz-box-sizing: border-box;
  box-sizing: border-box;
}

*,
*:before,
*:after {
  /* Inherit box-sizing to make it easier to change the property for components that leverage other behavior; see http://css-tricks.com/inheriting-box-sizing-probably-slightly-better-best-practice/ */
  box-sizing: inherit;
}

body {
  color: palette(gray, darker);
  background-color: palette(white);
  min-height: 100vh;
  min-width: 100vw;
  overflow-x: hidden;
}

a {
  border: 0;
  color: inherit;
  text-decoration: none;
}

strong,
.strong {
  font-weight: $serif-bold;
}

dfn,
i,
em,
.em {
  font-style: italic;
}

code,
kbd,
tt,
var,
samp,
pre {
  font-family: $code;
}

pre {
  border: 1px solid palette(gray, light);
  font-size: 16px;
  font-size: 1rem;
  line-height: 1.3125;
  margin: 0 0 1.75em;
  max-width: 100%;
  overflow: auto;
  padding: 1.75em;
  white-space: pre;
  white-space: pre-wrap;
  word-wrap: break-word;
}

code {
  background-color: palette(gray, light);
  padding: 0.125em 0.25em;
}

abbr,
acronym {
  border-bottom: 1px dotted palette(gray, light);
  cursor: help;
}

mark {
  background: palette(orange, light);
  color: #fff;
  padding: 0.125em 0.25em;
  text-decoration: none;
}

big {
  font-size: 125%;
}

hr {
  background-color: palette(gray, light);
  border: 0;
  height: 1px;
  margin: 0 0 vr(1);
}